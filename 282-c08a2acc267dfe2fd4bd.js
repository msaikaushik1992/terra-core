(window.webpackJsonp=window.webpackJsonp||[]).push([[282],{2674:function(e,a,t){"use strict";function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(a,"__esModule",{value:!0}),a.default=void 0;var c,s=r(t(0)),o=r(t(864)),m=(c=t(905))&&c.__esModule?c:{default:c};function p(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return p=function(){return e},e}function r(e){if(e&&e.__esModule)return e;if(null===e||"object"!==n(e)&&"function"!=typeof e)return{default:e};var a=p();if(a&&a.has(e))return a.get(e);var t={},c=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var s in e)if(Object.prototype.hasOwnProperty.call(e,s)){var o=c?Object.getOwnPropertyDescriptor(e,s):null;o&&(o.get||o.set)?Object.defineProperty(t,s,o):t[s]=e[s]}return t.default=e,a&&a.set(e,t),t}function l(e,a){return function(e){if(Array.isArray(e))return e}(e)||function(e,a){if(!(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e)))return;var t=[],n=!0,c=!1,s=void 0;try{for(var o,m=e[Symbol.iterator]();!(n=(o=m.next()).done)&&(t.push(o.value),!a||t.length!==a);n=!0);}catch(e){c=!0,s=e}finally{try{n||null==m.return||m.return()}finally{if(c)throw s}}return t}(e,a)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}var d=function(){var e,a=l((0,s.useState)([]),2),t=a[0],n=a[1],c=l((0,s.useState)(!1),2),p=c[0],r=c[1],d=m.default.length,u=function(e,a){e.preventDefault();var c=o.Utils.toggleArrayValue(t,a.key),s=c.length===d;r(p?!s:s),n(s?[]:c)},i=function(e){if(t.length){var a=t.indexOf(e)>=0;return p?!a:a}return p},N="empty";return t.length?N="indeterminate":p&&(N="checked"),s.default.createElement(o.default,{summaryId:"check-table",summary:"This table has rows that can be batch selected with the checkbox or disclosed for further details.",numberOfColumns:4,cellPaddingStyle:"standard",rowStyle:"disclose",checkStyle:"toggle",dividerStyle:"horizontal",headerData:{selectAllColumn:{checkStatus:N,checkLabel:"Batch Selection",onCheckAction:function(){r(!!t.length||!p),n([])}},cells:[{key:"cell-0",id:"toggle-0",children:"Column 0"},{key:"cell-1",id:"toggle-1",children:"Column 1"},{key:"cell-2",id:"toggle-2",children:"Column 2"},{key:"cell-3",id:"toggle-3",children:"Column 3"}]},bodyData:[{rows:(e=m.default,e.map((function(e){return{key:(a=e).key,cells:(t=a.cells,t.map((function(e){return function(e){return{key:e.key,children:e.title}}(e)}))),toggleAction:{metaData:{key:a.key},onToggle:u,toggleLabel:a.toggleText,isToggled:i(a.key)},discloseAction:{discloseLabel:a.discloseText,discloseCellIndex:a.primaryIndex}};var a,t})))}]})};a.default=d},3420:function(e,a,t){"use strict";t.r(a);var n=t(0),c=t.n(n),s=t(276),o=t(2674),m=t.n(o);function p(){return(p=Object.assign||function(e){for(var a=1;a<arguments.length;a++){var t=arguments[a];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e}).apply(this,arguments)}function r(e,a){if(null==e)return{};var t,n,c=function(e,a){if(null==e)return{};var t,n,c={},s=Object.keys(e);for(n=0;n<s.length;n++)t=s[n],a.indexOf(t)>=0||(c[t]=e[t]);return c}(e,a);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)t=s[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(c[t]=e[t])}return c}var l={};function d(e){var a=e.components,t=r(e,["components"]);return Object(s.mdx)("wrapper",p({},l,t,{components:a,mdxType:"MDXLayout"}),Object(s.mdx)("pre",{className:"language-jsx"},Object(s.mdx)("code",p({parentName:"pre"},{className:"language-jsx"}),Object(s.mdx)("span",p({parentName:"code"},{className:"token keyword module"}),"import")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token maybe-class-name"}),"React"),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),",")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"{"),"\n  useState",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),","),"\n",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"}")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token keyword module"}),"from")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token string"}),"'react'"),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(s.mdx)("span",p({parentName:"code"},{className:"token keyword module"}),"import")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token maybe-class-name"}),"Table"),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),",")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(s.mdx)("span",p({parentName:"code"},{className:"token maybe-class-name"}),"Utils"),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),","),"\n",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"}")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token keyword module"}),"from")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token string"}),"'terra-table'"),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(s.mdx)("span",p({parentName:"code"},{className:"token keyword module"}),"import")," mockData ",Object(s.mdx)("span",p({parentName:"code"},{className:"token keyword module"}),"from")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token string"}),"'./mock-data/mock-select'"),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),";"),"\n\n",Object(s.mdx)("span",p({parentName:"code"},{className:"token keyword"}),"const")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token function-variable function"}),"createCell")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token operator"}),"=")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token parameter"}),"cell")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token arrow operator"}),"=>")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"("),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"{")," key",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),":")," cell",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"."),Object(s.mdx)("span",p({parentName:"code"},{className:"token property-access"}),"key"),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),",")," children",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),":")," cell",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"."),Object(s.mdx)("span",p({parentName:"code"},{className:"token property-access"}),"title")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"}"),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),")"),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),";"),"\n\n",Object(s.mdx)("span",p({parentName:"code"},{className:"token keyword"}),"const")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token function-variable function"}),"createCellsForRow")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token operator"}),"=")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token parameter"}),"cells")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token arrow operator"}),"=>")," cells",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"."),Object(s.mdx)("span",p({parentName:"code"},{className:"token method function property-access"}),"map"),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"("),Object(s.mdx)("span",p({parentName:"code"},{className:"token parameter"}),"cell")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token arrow operator"}),"=>")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token function"}),"createCell"),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"("),"cell",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),")"),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),")"),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),";"),"\n\n",Object(s.mdx)("span",p({parentName:"code"},{className:"token keyword"}),"const")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token function-variable function"}),Object(s.mdx)("span",p({parentName:"span"},{className:"token maybe-class-name"}),"CheckMarkTable"))," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token operator"}),"=")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"("),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token arrow operator"}),"=>")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(s.mdx)("span",p({parentName:"code"},{className:"token keyword"}),"const")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"["),"checkedKeys",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),",")," setCheckedKeys",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"]")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token operator"}),"=")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token function"}),"useState"),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"("),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"["),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"]"),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),")"),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),";"),"\n  ",Object(s.mdx)("span",p({parentName:"code"},{className:"token keyword"}),"const")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"["),"allChecked",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),",")," setAllChecked",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"]")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token operator"}),"=")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token function"}),"useState"),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"("),Object(s.mdx)("span",p({parentName:"code"},{className:"token boolean"}),"false"),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),")"),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),";"),"\n  ",Object(s.mdx)("span",p({parentName:"code"},{className:"token keyword"}),"const")," rowCount ",Object(s.mdx)("span",p({parentName:"code"},{className:"token operator"}),"=")," mockData",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"."),Object(s.mdx)("span",p({parentName:"code"},{className:"token property-access"}),"length"),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),";")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token comment"}),"// This value needs to exclude or account for section headers"),"\n\n  ",Object(s.mdx)("span",p({parentName:"code"},{className:"token keyword"}),"const")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token function-variable function"}),"handleRowCheckAction")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token operator"}),"=")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"("),Object(s.mdx)("span",p({parentName:"code"},{className:"token parameter"}),"event",Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),",")," metaData"),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token arrow operator"}),"=>")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"{"),"\n    event",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"."),Object(s.mdx)("span",p({parentName:"code"},{className:"token method function property-access"}),"preventDefault"),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"("),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),")"),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),";"),"\n\n    ",Object(s.mdx)("span",p({parentName:"code"},{className:"token keyword"}),"const")," newKeys ",Object(s.mdx)("span",p({parentName:"code"},{className:"token operator"}),"=")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token maybe-class-name"}),"Utils"),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"."),Object(s.mdx)("span",p({parentName:"code"},{className:"token method function property-access"}),"toggleArrayValue"),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"("),"checkedKeys",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),",")," metaData",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"."),Object(s.mdx)("span",p({parentName:"code"},{className:"token property-access"}),"key"),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),")"),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),";"),"\n    ",Object(s.mdx)("span",p({parentName:"code"},{className:"token keyword"}),"const")," isMax ",Object(s.mdx)("span",p({parentName:"code"},{className:"token operator"}),"=")," newKeys",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"."),Object(s.mdx)("span",p({parentName:"code"},{className:"token property-access"}),"length")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token operator"}),"===")," rowCount",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),";"),"\n    ",Object(s.mdx)("span",p({parentName:"code"},{className:"token function"}),"setAllChecked"),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"("),"allChecked ",Object(s.mdx)("span",p({parentName:"code"},{className:"token operator"}),"?")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token operator"}),"!"),"isMax ",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),":")," isMax",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),")"),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),";"),"\n    ",Object(s.mdx)("span",p({parentName:"code"},{className:"token function"}),"setCheckedKeys"),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"("),"isMax ",Object(s.mdx)("span",p({parentName:"code"},{className:"token operator"}),"?")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"["),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"]")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),":")," newKeys",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),")"),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),";"),"\n  ",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"}"),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),";"),"\n\n  ",Object(s.mdx)("span",p({parentName:"code"},{className:"token keyword"}),"const")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token function-variable function"}),"handleHeaderCheckAction")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token operator"}),"=")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"("),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token arrow operator"}),"=>")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ",Object(s.mdx)("span",p({parentName:"code"},{className:"token function"}),"setAllChecked"),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"("),Object(s.mdx)("span",p({parentName:"code"},{className:"token operator"}),"!"),Object(s.mdx)("span",p({parentName:"code"},{className:"token operator"}),"!"),"checkedKeys",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"."),Object(s.mdx)("span",p({parentName:"code"},{className:"token property-access"}),"length")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token operator"}),"||")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token operator"}),"!"),"allChecked",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),")"),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),";"),"\n    ",Object(s.mdx)("span",p({parentName:"code"},{className:"token function"}),"setCheckedKeys"),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"("),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"["),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"]"),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),")"),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),";"),"\n  ",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"}"),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),";"),"\n\n  ",Object(s.mdx)("span",p({parentName:"code"},{className:"token keyword"}),"const")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token function-variable function"}),"getIsRowChecked")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token operator"}),"=")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"("),Object(s.mdx)("span",p({parentName:"code"},{className:"token parameter"}),"key"),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token arrow operator"}),"=>")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ",Object(s.mdx)("span",p({parentName:"code"},{className:"token keyword"}),"if")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"("),"checkedKeys",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"."),Object(s.mdx)("span",p({parentName:"code"},{className:"token property-access"}),"length"),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"{"),"\n      ",Object(s.mdx)("span",p({parentName:"code"},{className:"token keyword"}),"const")," isPresent ",Object(s.mdx)("span",p({parentName:"code"},{className:"token operator"}),"=")," checkedKeys",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"."),Object(s.mdx)("span",p({parentName:"code"},{className:"token method function property-access"}),"indexOf"),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"("),"key",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token operator"}),">=")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token number"}),"0"),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),";"),"\n      ",Object(s.mdx)("span",p({parentName:"code"},{className:"token keyword"}),"return")," allChecked ",Object(s.mdx)("span",p({parentName:"code"},{className:"token operator"}),"?")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token operator"}),"!"),"isPresent ",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),":")," isPresent",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),";"),"\n    ",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"}"),"\n    ",Object(s.mdx)("span",p({parentName:"code"},{className:"token keyword"}),"return")," allChecked",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),";"),"\n  ",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"}"),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),";"),"\n\n  ",Object(s.mdx)("span",p({parentName:"code"},{className:"token keyword"}),"const")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token function-variable function"}),"createRow")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token operator"}),"=")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token parameter"}),"rowData")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token arrow operator"}),"=>")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"("),"\n    ",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"{"),"\n      key",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),":")," rowData",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"."),Object(s.mdx)("span",p({parentName:"code"},{className:"token property-access"}),"key"),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),","),"\n      cells",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),":")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token function"}),"createCellsForRow"),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"("),"rowData",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"."),Object(s.mdx)("span",p({parentName:"code"},{className:"token property-access"}),"cells"),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),")"),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),","),"\n      toggleAction",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),":")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"{"),"\n        metaData",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),":")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"{")," key",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),":")," rowData",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"."),Object(s.mdx)("span",p({parentName:"code"},{className:"token property-access"}),"key")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"}"),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),","),"\n        onToggle",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),":")," handleRowCheckAction",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),","),"\n        toggleLabel",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),":")," rowData",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"."),Object(s.mdx)("span",p({parentName:"code"},{className:"token property-access"}),"toggleText"),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),","),"\n        isToggled",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),":")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token function"}),"getIsRowChecked"),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"("),"rowData",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"."),Object(s.mdx)("span",p({parentName:"code"},{className:"token property-access"}),"key"),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),")"),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),","),"\n      ",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"}"),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),","),"\n      discloseAction",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),":")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"{"),"\n        discloseLabel",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),":")," rowData",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"."),Object(s.mdx)("span",p({parentName:"code"},{className:"token property-access"}),"discloseText"),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),","),"\n        discloseCellIndex",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),":")," rowData",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"."),Object(s.mdx)("span",p({parentName:"code"},{className:"token property-access"}),"primaryIndex"),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),","),"\n      ",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"}"),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),","),"\n    ",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"}"),"\n  ",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),")"),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),";"),"\n\n  ",Object(s.mdx)("span",p({parentName:"code"},{className:"token keyword"}),"const")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token function-variable function"}),"createRows")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token operator"}),"=")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token parameter"}),"data")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token arrow operator"}),"=>")," data",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"."),Object(s.mdx)("span",p({parentName:"code"},{className:"token method function property-access"}),"map"),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"("),Object(s.mdx)("span",p({parentName:"code"},{className:"token parameter"}),"childItem")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token arrow operator"}),"=>")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token function"}),"createRow"),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"("),"childItem",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),")"),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),")"),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),";"),"\n\n  ",Object(s.mdx)("span",p({parentName:"code"},{className:"token keyword"}),"let")," status ",Object(s.mdx)("span",p({parentName:"code"},{className:"token operator"}),"=")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token string"}),"'empty'"),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),";"),"\n  ",Object(s.mdx)("span",p({parentName:"code"},{className:"token keyword"}),"if")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"("),"checkedKeys",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"."),Object(s.mdx)("span",p({parentName:"code"},{className:"token property-access"}),"length"),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"{"),"\n    status ",Object(s.mdx)("span",p({parentName:"code"},{className:"token operator"}),"=")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token string"}),"'indeterminate'"),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),";"),"\n  ",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"}")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token keyword"}),"else")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token keyword"}),"if")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"("),"allChecked",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"{"),"\n    status ",Object(s.mdx)("span",p({parentName:"code"},{className:"token operator"}),"=")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token string"}),"'checked'"),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),";"),"\n  ",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n  ",Object(s.mdx)("span",p({parentName:"code"},{className:"token keyword"}),"return")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"("),"\n    ",Object(s.mdx)("span",p({parentName:"code"},{className:"token tag"}),Object(s.mdx)("span",p({parentName:"span"},{className:"token tag"}),Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),"<"),Object(s.mdx)("span",p({parentName:"span"},{className:"token class-name"}),"Table")),"\n      ",Object(s.mdx)("span",p({parentName:"span"},{className:"token attr-name"}),"summaryId"),Object(s.mdx)("span",p({parentName:"span"},{className:"token attr-value"}),Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),"="),Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),'"'),"check-table",Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),'"')),"\n      ",Object(s.mdx)("span",p({parentName:"span"},{className:"token attr-name"}),"summary"),Object(s.mdx)("span",p({parentName:"span"},{className:"token attr-value"}),Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),"="),Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),'"'),"This table has rows that can be batch selected with the checkbox or disclosed for further details.",Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),'"')),"\n      ",Object(s.mdx)("span",p({parentName:"span"},{className:"token attr-name"}),"numberOfColumns"),Object(s.mdx)("span",p({parentName:"span"},{className:"token script language-javascript"}),Object(s.mdx)("span",p({parentName:"span"},{className:"token script-punctuation punctuation"}),"="),Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),"{"),Object(s.mdx)("span",p({parentName:"span"},{className:"token number"}),"4"),Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),"}")),"\n      ",Object(s.mdx)("span",p({parentName:"span"},{className:"token attr-name"}),"cellPadding"),Object(s.mdx)("span",p({parentName:"span"},{className:"token style-attr language-css"}),Object(s.mdx)("span",p({parentName:"span"},{className:"token attr-name"}),Object(s.mdx)("span",p({parentName:"span"},{className:"token attr-name"}),"Style")),Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),'="'),Object(s.mdx)("span",p({parentName:"span"},{className:"token attr-value"}),"standard"),Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),'"')),"\n      ",Object(s.mdx)("span",p({parentName:"span"},{className:"token attr-name"}),"row"),Object(s.mdx)("span",p({parentName:"span"},{className:"token style-attr language-css"}),Object(s.mdx)("span",p({parentName:"span"},{className:"token attr-name"}),Object(s.mdx)("span",p({parentName:"span"},{className:"token attr-name"}),"Style")),Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),'="'),Object(s.mdx)("span",p({parentName:"span"},{className:"token attr-value"}),"disclose"),Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),'"')),"\n      ",Object(s.mdx)("span",p({parentName:"span"},{className:"token attr-name"}),"check"),Object(s.mdx)("span",p({parentName:"span"},{className:"token style-attr language-css"}),Object(s.mdx)("span",p({parentName:"span"},{className:"token attr-name"}),Object(s.mdx)("span",p({parentName:"span"},{className:"token attr-name"}),"Style")),Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),'="'),Object(s.mdx)("span",p({parentName:"span"},{className:"token attr-value"}),"toggle"),Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),'"')),"\n      ",Object(s.mdx)("span",p({parentName:"span"},{className:"token attr-name"}),"divider"),Object(s.mdx)("span",p({parentName:"span"},{className:"token style-attr language-css"}),Object(s.mdx)("span",p({parentName:"span"},{className:"token attr-name"}),Object(s.mdx)("span",p({parentName:"span"},{className:"token attr-name"}),"Style")),Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),'="'),Object(s.mdx)("span",p({parentName:"span"},{className:"token attr-value"}),"horizontal"),Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),'"')),"\n      ",Object(s.mdx)("span",p({parentName:"span"},{className:"token attr-name"}),"headerData"),Object(s.mdx)("span",p({parentName:"span"},{className:"token script language-javascript"}),Object(s.mdx)("span",p({parentName:"span"},{className:"token script-punctuation punctuation"}),"="),Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),"{"),Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),"{"),"\n        selectAllColumn",Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),":")," ",Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),"{"),"\n          checkStatus",Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),":")," status",Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),","),"\n          checkLabel",Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),":")," ",Object(s.mdx)("span",p({parentName:"span"},{className:"token string"}),"'Batch Selection'"),Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),","),"\n          onCheckAction",Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),":")," handleHeaderCheckAction",Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),","),"\n        ",Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),"}"),Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),","),"\n        cells",Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),":")," ",Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),"["),"\n          ",Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),"{")," key",Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),":")," ",Object(s.mdx)("span",p({parentName:"span"},{className:"token string"}),"'cell-0'"),Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),",")," id",Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),":")," ",Object(s.mdx)("span",p({parentName:"span"},{className:"token string"}),"'toggle-0'"),Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),",")," children",Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),":")," ",Object(s.mdx)("span",p({parentName:"span"},{className:"token string"}),"'Column 0'")," ",Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),"}"),Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),","),"\n          ",Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),"{")," key",Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),":")," ",Object(s.mdx)("span",p({parentName:"span"},{className:"token string"}),"'cell-1'"),Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),",")," id",Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),":")," ",Object(s.mdx)("span",p({parentName:"span"},{className:"token string"}),"'toggle-1'"),Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),",")," children",Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),":")," ",Object(s.mdx)("span",p({parentName:"span"},{className:"token string"}),"'Column 1'")," ",Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),"}"),Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),","),"\n          ",Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),"{")," key",Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),":")," ",Object(s.mdx)("span",p({parentName:"span"},{className:"token string"}),"'cell-2'"),Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),",")," id",Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),":")," ",Object(s.mdx)("span",p({parentName:"span"},{className:"token string"}),"'toggle-2'"),Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),",")," children",Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),":")," ",Object(s.mdx)("span",p({parentName:"span"},{className:"token string"}),"'Column 2'")," ",Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),"}"),Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),","),"\n          ",Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),"{")," key",Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),":")," ",Object(s.mdx)("span",p({parentName:"span"},{className:"token string"}),"'cell-3'"),Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),",")," id",Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),":")," ",Object(s.mdx)("span",p({parentName:"span"},{className:"token string"}),"'toggle-3'"),Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),",")," children",Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),":")," ",Object(s.mdx)("span",p({parentName:"span"},{className:"token string"}),"'Column 3'")," ",Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),"}"),Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),","),"\n        ",Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),"]"),Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),","),"\n      ",Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),"}"),Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),"}")),"\n      ",Object(s.mdx)("span",p({parentName:"span"},{className:"token attr-name"}),"bodyData"),Object(s.mdx)("span",p({parentName:"span"},{className:"token script language-javascript"}),Object(s.mdx)("span",p({parentName:"span"},{className:"token script-punctuation punctuation"}),"="),Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),"{"),Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),"["),Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),"{"),"\n        rows",Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),":")," ",Object(s.mdx)("span",p({parentName:"span"},{className:"token function"}),"createRows"),Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),"("),"mockData",Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),")"),Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),","),"\n      ",Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),"}"),Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),"]"),Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),"}")),"\n    ",Object(s.mdx)("span",p({parentName:"span"},{className:"token punctuation"}),"/>")),"\n  ",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),")"),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),"}"),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),";"),"\n\n",Object(s.mdx)("span",p({parentName:"code"},{className:"token keyword module"}),"export")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token keyword module"}),"default")," ",Object(s.mdx)("span",p({parentName:"code"},{className:"token maybe-class-name"}),"CheckMarkTable"),Object(s.mdx)("span",p({parentName:"code"},{className:"token punctuation"}),";"),"\n\n")))}d.isMDXComponent=!0;var u=t(846),i=t.n(u),N=function(e){var a=e.title,t=e.description,n=e.isExpanded;return c.a.createElement(i.a,{title:a||"Check Mark Table",description:t,example:c.a.createElement(m.a,null),exampleSrc:c.a.createElement(d,null),isExpanded:n})};function k(){return(k=Object.assign||function(e){for(var a=1;a<arguments.length;a++){var t=arguments[a];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e}).apply(this,arguments)}function b(e,a){if(null==e)return{};var t,n,c=function(e,a){if(null==e)return{};var t,n,c={},s=Object.keys(e);for(n=0;n<s.length;n++)t=s[n],a.indexOf(t)>=0||(c[t]=e[t]);return c}(e,a);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)t=s[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(c[t]=e[t])}return c}t.d(a,"default",(function(){return O}));var x={};function O(e){var a=e.components,t=b(e,["components"]);return Object(s.mdx)("wrapper",k({},x,t,{components:a,mdxType:"MDXLayout"}),Object(s.mdx)("h1",{id:"terra-table---implementing-a-checkmark-table"},"Terra Table - Implementing a CheckMark Table"),Object(s.mdx)("p",null,"The terra-table implementation requires controlled state if selections are required. As a result selections are applied at child row generation from HOC state. The following guide show you how to implement that state within a multiple row selection variant of table, as well as implement the additional narrowing requirements of a max selection for rows."),Object(s.mdx)("h2",{id:"state-management"},"State Management"),Object(s.mdx)("p",null,"The state of selection needs to be managed for the table in a High Order Component (HOC). In this example we are going to be using a unique key to manage the selection state, but the type of state used is open to the implementor of the HOC. The ",Object(s.mdx)("inlineCode",{parentName:"p"},"selectedKeys")," will keep track of the keys that are active given the allSelected state. In the case where ",Object(s.mdx)("inlineCode",{parentName:"p"},"allSelected"),' is "false" the key values will be the keys that are selected, and in the case of "true" it will be the keys that are not selected. This dual behavior removes the need to copy all keys into state when the "select all" in checked.'),Object(s.mdx)("p",null," First defaulting our state to an empty array in the constructor. Then "),Object(s.mdx)("pre",{className:"language-diff"},Object(s.mdx)("code",k({parentName:"pre"},{className:"language-diff"}),Object(s.mdx)("span",k({parentName:"code"},{className:"token inserted-sign inserted"}),"+ const [checkedKeys, setCheckedKeys] = useState([]);\n+ const [allChecked, setAllChecked] = useState(false);\n"))),Object(s.mdx)("p",null,"Next creating an event handler callback method to pass to the table row check mark cell's ",Object(s.mdx)("inlineCode",{parentName:"p"},"onCheckAction")," prop. The ",Object(s.mdx)("inlineCode",{parentName:"p"},"onCheckAction")," will return the metaData prop passed it each check mark cell."),Object(s.mdx)("pre",{className:"language-diff"},Object(s.mdx)("code",k({parentName:"pre"},{className:"language-diff"}),Object(s.mdx)("span",k({parentName:"code"},{className:"token inserted-sign inserted"}),"+  const handleRowCheckAction = (event, metaData) => {\n+\n+  }\n"))),Object(s.mdx)("p",null,"As a precaution we can prevent default on the event, in case the table has an ancestor with a listener. This also prevents the browser from auto page scrolling when we are intending to make a selection with the space bar."),Object(s.mdx)("pre",{className:"language-diff"},Object(s.mdx)("code",k({parentName:"pre"},{className:"language-diff"}),Object(s.mdx)("span",k({parentName:"code"},{className:"token unchanged"}),"  const handleRowCheckAction = (event, metaData) => {\n"),Object(s.mdx)("span",k({parentName:"code"},{className:"token inserted-sign inserted"}),"+   event.preventDefault();\n+   event.stopPropagation();\n"),Object(s.mdx)("span",k({parentName:"code"},{className:"token unchanged"}),"  }\n"))),Object(s.mdx)("p",null,"Terra Table comes with additional helpers to manage state, in this case we want to determine if the selection has selected or unselected the table row key in our state. So we use the utility method ",Object(s.mdx)("inlineCode",{parentName:"p"},"toggleArrayValue"),", which takes an array of keys and returns a new array of keys following the addition or removal of the key passed. We then set this as our state. Comparing the length of the array returned to the number of selectable rows within your table we can determine if all values are selected. If all values are selected we reset the keys, as there are no exceptions to check for."),Object(s.mdx)("pre",{className:"language-diff"},Object(s.mdx)("code",k({parentName:"pre"},{className:"language-diff"}),Object(s.mdx)("span",k({parentName:"code"},{className:"token unchanged"}),"  const handleRowCheckAction = (event, metaData) => {\n    event.preventDefault();\n    event.stopPropagation();\n  \n"),Object(s.mdx)("span",k({parentName:"code"},{className:"token inserted-sign inserted"}),"+   const newKeys = Utils.toggleArrayValue(checkedKeys, metaData.key);\n+   const isMax = newKeys.length === rowCount;\n+   setAllChecked(allChecked ? !isMax : isMax);\n+   setCheckedKeys(isMax ? [] : newKeys);\n"),Object(s.mdx)("span",k({parentName:"code"},{className:"token unchanged"}),"  }\n"))),Object(s.mdx)("p",null,"Next in our implementation we'll want to add the ability to select all checkmark values. If keys are present there is an intermediate state. In the case of the intermediate state select all values. If ",Object(s.mdx)("inlineCode",{parentName:"p"},"allSelected")," is true then set to false. In either case we will be setting to all or nothing selected, so the intermediate values will be reset to an empty array."),Object(s.mdx)("pre",{className:"language-diff"},Object(s.mdx)("code",k({parentName:"pre"},{className:"language-diff"}),Object(s.mdx)("span",k({parentName:"code"},{className:"token inserted-sign inserted"}),"+ const handleHeaderCheckAction = () => {\n+   setAllChecked(!!checkedKeys.length || !allChecked);\n+   setCheckedKeys([]);\n+ };\n"))),Object(s.mdx)("p",null,"Before we create our method to populate our row with check mark state, we want to create a method to retrieve a selected value based upon a key and our dual state."),Object(s.mdx)("pre",{className:"language-diff"},Object(s.mdx)("code",k({parentName:"pre"},{className:"language-diff"}),Object(s.mdx)("span",k({parentName:"code"},{className:"token inserted-sign inserted"}),"+ const getIsRowChecked = (key) => {\n+   if (checkedKeys.length) {\n+     const isPresent = checkedKeys.indexOf(key) >= 0;\n+     return allChecked ? !isPresent : isPresent;\n+   }\n+   return allChecked;\n+ };\n"))),Object(s.mdx)("p",null,"Setting state will trigger another render. So in the render method we need generate our table rows with the updated isToggled props. Each item needs a unique key, not necessarily associated to our own key, but it works as well. The table renders flat, so keys need to be unique even if they are placed within sections.\n",Object(s.mdx)("a",k({parentName:"p"},{href:"https://reactjs.org/docs/lists-and-keys.html"}),"React List & Key Documentation")),Object(s.mdx)("pre",{className:"language-diff"},Object(s.mdx)("code",k({parentName:"pre"},{className:"language-diff"}),Object(s.mdx)("span",k({parentName:"code"},{className:"token inserted-sign inserted"}),"+ const createRow = rowData => (\n+   {\n+     key: rowData.key,\n+     cells: createCellsForRow(rowData.cells),\n+   }\n+ );\n"))),Object(s.mdx)("p",null,'Next we need to set up our metaData object with our key value, and attach the "onCheckAction" to our handler. The toggleLabel will relate to the row or check style set as "toggle".'),Object(s.mdx)("pre",{className:"language-diff"},Object(s.mdx)("code",k({parentName:"pre"},{className:"language-diff"}),Object(s.mdx)("span",k({parentName:"code"},{className:"token unchanged"}),"  const createRow = rowData => (\n    {\n      key: rowData.key,\n"),Object(s.mdx)("span",k({parentName:"code"},{className:"token inserted-sign inserted"}),"+     toggleAction: {\n+       metaData: { key: rowData.key },\n+       onToggle: handleRowCheckAction,\n+       toggleLabel: rowData.toggleText,\n+     },\n"),Object(s.mdx)("span",k({parentName:"code"},{className:"token unchanged"}),"      cells: createCellsForRow(rowData.cells),\n    }\n  );\n"))),Object(s.mdx)("p",null,"Now pass the key from the rowData to our ",Object(s.mdx)("inlineCode",{parentName:"p"},"getIsRowChecked")," method to set whether or not the row is toggled."),Object(s.mdx)("pre",{className:"language-diff"},Object(s.mdx)("code",k({parentName:"pre"},{className:"language-diff"}),Object(s.mdx)("span",k({parentName:"code"},{className:"token unchanged"}),"  const createRow = rowData => (\n    {\n      key: rowData.key,\n      toggleAction: {\n        metaData: { key: rowData.key },\n        onToggle: handleRowCheckAction,\n        toggleLabel: rowData.toggleText,\n        isToggled: getIsRowChecked(rowData.key),\n      },\n      cells: createCellsForRow(rowData.cells),\n    }\n  );\n"))),Object(s.mdx)("p",null,"We also are going to implement disclosure on our rows, so we will need to set the ",Object(s.mdx)("inlineCode",{parentName:"p"},"discloseLabel")," and the ",Object(s.mdx)("inlineCode",{parentName:"p"},"primaryCellIndex"),". The ",Object(s.mdx)("inlineCode",{parentName:"p"},"primaryCellIndex")," relates to the cell that will function as an accessible link element in our row."),Object(s.mdx)("pre",{className:"language-diff"},Object(s.mdx)("code",k({parentName:"pre"},{className:"language-diff"}),Object(s.mdx)("span",k({parentName:"code"},{className:"token unchanged"}),"  const createRow = rowData => (\n    {\n      key: rowData.key,\n      toggleAction: {\n        metaData: { key: rowData.key },\n        onToggle: handleRowCheckAction,\n        toggleLabel: rowData.toggleText,\n        isToggled: getIsRowChecked(rowData.key),\n      },\n      cells: createCellsForRow(rowData.cells),\n"),Object(s.mdx)("span",k({parentName:"code"},{className:"token inserted-sign inserted"}),"+     discloseAction: {\n+       discloseLabel: rowData.discloseText,\n+       discloseCellIndex: rowData.primaryIndex,\n+     },\n"),Object(s.mdx)("span",k({parentName:"code"},{className:"token unchanged"}),"    }\n  );\n"))),Object(s.mdx)("p",null,"We can then implement the unpack of our data into our row cells."),Object(s.mdx)("pre",{className:"language-diff"},Object(s.mdx)("code",k({parentName:"pre"},{className:"language-diff"}),Object(s.mdx)("span",k({parentName:"code"},{className:"token inserted-sign inserted"}),"+  const createCell = cell => ({ key: cell.key, children: cell.title });\n"),"\n",Object(s.mdx)("span",k({parentName:"code"},{className:"token inserted-sign inserted"}),"+  const createCellsForRow = cells => cells.map(cell => createCell(cell));\n"))),Object(s.mdx)("p",null,"Next can implement a method to loop through our data and create the table with our methods and call it from our render method."),Object(s.mdx)("pre",{className:"language-diff"},Object(s.mdx)("code",k({parentName:"pre"},{className:"language-diff"}),Object(s.mdx)("span",k({parentName:"code"},{className:"token inserted-sign inserted"}),"+  const createRows = data => data.map(childItem => createRow(childItem));\n"),"\n",Object(s.mdx)("span",k({parentName:"code"},{className:"token unchanged"}),"  return (\n"),Object(s.mdx)("span",k({parentName:"code"},{className:"token inserted-sign inserted"}),"+   <Table\n+     summaryId=\"check-table\"\n+     summary=\"This table has rows that can be batch selected with the checkbox or disclosed for further details.\"\n+     numberOfColumns={4}\n+     cellPaddingStyle=\"standard\"\n+     rowStyle=\"disclose\"\n+     checkStyle=\"toggle\"\n+     headerData={{\n+       cells: [\n+         { key: 'cell-0', id: 'toggle-0', children: 'Column 0' },\n+         { key: 'cell-1', id: 'toggle-1', children: 'Column 1' },\n+         { key: 'cell-2', id: 'toggle-2', children: 'Column 2' },\n+         { key: 'cell-3', id: 'toggle-3', children: 'Column 3' },\n+       ],\n+     }}\n+     bodyData={[{\n+       rows: createRows(mockData),\n+     }]}\n+   />\n"),Object(s.mdx)("span",k({parentName:"code"},{className:"token unchanged"}),"  );\n"))),Object(s.mdx)("p",null,"Finally we need to add an entry to the header for the check mark cell. The ",Object(s.mdx)("inlineCode",{parentName:"p"},"checkStatus")," prop will be in either the case of ",Object(s.mdx)("inlineCode",{parentName:"p"},"allChecked")," or in the presence of ",Object(s.mdx)("inlineCode",{parentName:"p"},"checkedKeys")," the ",Object(s.mdx)("inlineCode",{parentName:"p"},"indeterminate")," value will be sent.."),Object(s.mdx)("pre",{className:"language-diff"},Object(s.mdx)("code",k({parentName:"pre"},{className:"language-diff"}),Object(s.mdx)("span",k({parentName:"code"},{className:"token inserted-sign inserted"}),"+ let status = 'empty';\n+ if (checkedKeys.length) {\n+   status = 'indeterminate';\n+ } else if (allChecked) {\n+   status = 'checked';\n+ }\n"),"\n",Object(s.mdx)("span",k({parentName:"code"},{className:"token unchanged"}),'  return (\n    <Table\n      summaryId="check-table"\n      summary="This table has rows that can be batch selected with the checkbox or disclosed for further details."\n      numberOfColumns={4}\n      cellPaddingStyle="standard"\n      rowStyle="disclose"\n      checkStyle="toggle"\n      headerData={{\n'),Object(s.mdx)("span",k({parentName:"code"},{className:"token inserted-sign inserted"}),"+       selectAllColumn: {\n+         checkStatus: status,\n+         checkLabel: 'Batch Selection',\n+         onCheckAction: handleHeaderCheckAction,\n+       },\n"),Object(s.mdx)("span",k({parentName:"code"},{className:"token unchanged"}),"        cells: [\n          { key: 'cell-0', id: 'toggle-0', children: 'Column 0' },\n          { key: 'cell-1', id: 'toggle-1', children: 'Column 1' },\n          { key: 'cell-2', id: 'toggle-2', children: 'Column 2' },\n          { key: 'cell-3', id: 'toggle-3', children: 'Column 3' },\n        ],\n      }}\n      bodyData={[{\n        rows: createRows(mockData),\n      }]}\n    />\n  );\n"))),Object(s.mdx)("p",null,"Using these steps we get the following example:"),Object(s.mdx)(N,{mdxType:"CheckMarkTable"}))}O.isMDXComponent=!0},846:function(e,a,t){"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.default=void 0;var n=m(t(0)),c=m(t(2)),s=m(t(4)),o=m(t(855));function m(e){return e&&e.__esModule?e:{default:e}}function p(e){return(p="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function r(e){return(r=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function l(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function d(e,a){for(var t=0;t<a.length;t++){var n=a[t];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function u(e,a,t){return a&&d(e.prototype,a),t&&d(e,t),e}function i(e,a){return(i=Object.setPrototypeOf||function(e,a){return e.__proto__=a,e})(e,a)}var N=s.default.bind(o.default),k={example:c.default.element,exampleSrc:c.default.element,title:c.default.string,description:c.default.node,isExpanded:c.default.bool},b=function(e){function a(e){var t,n,c;return function(e,a){if(!(e instanceof a))throw new TypeError("Cannot call a class as a function")}(this,a),n=this,(t=!(c=r(a).call(this,e))||"object"!==p(c)&&"function"!=typeof c?l(n):c).state={isExpanded:e.isExpanded,isBackgroundTransparent:!1},t.handleBgToggle=t.handleBgToggle.bind(l(t)),t.handleCodeToggle=t.handleCodeToggle.bind(l(t)),t}return function(e,a){if("function"!=typeof a&&null!==a)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(a&&a.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),a&&i(e,a)}(a,e),u(a,null,[{key:"renderHeader",value:function(e){return e?n.default.createElement("div",{className:N("header")},n.default.createElement("h2",{className:N("title")},e)):null}},{key:"renderDescription",value:function(e){return e?n.default.createElement("div",{className:N("description")},e):null}}]),u(a,[{key:"handleBgToggle",value:function(){this.setState((function(e){return{isBackgroundTransparent:!e.isBackgroundTransparent}}))}},{key:"handleCodeToggle",value:function(){this.setState((function(e){return{isExpanded:!e.isExpanded}}))}},{key:"render",value:function(){var e=this.props,t=e.example,c=e.exampleSrc,s=e.title,o=e.description,m=this.state,p=m.isExpanded,r=m.isBackgroundTransparent;return n.default.createElement("div",{className:N("template")},a.renderHeader(s),n.default.createElement("div",{className:N("content",{"dynamic-content":r})},a.renderDescription(o),t),c&&n.default.createElement("div",{className:N("footer")},n.default.createElement("div",{className:N("button-container")},n.default.createElement("button",{type:"button",className:N("bg-toggle"),onClick:this.handleBgToggle},"Toggle Background"),n.default.createElement("button",{type:"button",className:N("code-toggle"),onClick:this.handleCodeToggle},n.default.createElement("span",{className:N("chevron-left")}),n.default.createElement("span",null,"Code"),n.default.createElement("span",{className:N("chevron-right")}))),p&&n.default.createElement("div",{className:N("code")},c)))}}]),a}(n.default.Component);b.propTypes=k,b.defaultProps={isExpanded:!1};var x=b;a.default=x},855:function(e,a,t){e.exports={template:"ExampleTemplate-module__template___2Cn_e",header:"ExampleTemplate-module__header___1Uk65",content:"ExampleTemplate-module__content___2BfpO",description:"ExampleTemplate-module__description___17dwL",footer:"ExampleTemplate-module__footer___2qb8M","button-container":"ExampleTemplate-module__button-container___305lx",code:"ExampleTemplate-module__code____AmLF","bg-toggle":"ExampleTemplate-module__bg-toggle___3RP_x","code-toggle":"ExampleTemplate-module__code-toggle___25ONK","chevron-left":"ExampleTemplate-module__chevron-left___3vfkd","chevron-right":"ExampleTemplate-module__chevron-right___YOdVB",title:"ExampleTemplate-module__title___5hduh","dynamic-content":"ExampleTemplate-module__dynamic-content___1b8Fh"}},905:function(e,a,t){"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.default=void 0;var n=[{key:"unique-0",toggleText:"Toggle Power Row 0",discloseText:"Power Row 0 - Details",primaryIndex:1,cells:[{key:"unique-0-0",title:"Item 0-0"},{key:"unique-0-1",title:"Item 0-1"},{key:"unique-0-2",title:"Item 0-2"},{key:"unique-0-3",title:"Item 0-3"}]},{key:"unique-1",toggleText:"Toggle Power Row 1",discloseText:"Power Row 1 - Details",primaryIndex:1,cells:[{key:"unique-1-0",title:"Item 1-0"},{key:"unique-1-1",title:"Item 1-1"},{key:"unique-1-2",title:"Item 1-2"},{key:"unique-1-3",title:"Item 1-3"}]},{key:"unique-2",toggleText:"Toggle Power Row 2",discloseText:"Power Row 2 - Details",primaryIndex:1,cells:[{key:"unique-2-0",title:"Item 2-0"},{key:"unique-2-1",title:"Item 2-1"},{key:"unique-2-2",title:"Item 2-2"},{key:"unique-2-3",title:"Item 2-3"}]},{key:"unique-3",toggleText:"Toggle Power Row 3",discloseText:"Power Row 3 - Details",primaryIndex:1,cells:[{key:"unique-3-0",title:"Item 3-0"},{key:"unique-3-1",title:"Item 3-1"},{key:"unique-3-2",title:"Item 3-2"},{key:"unique-3-3",title:"Item 3-3"}]},{key:"unique-4",toggleText:"Toggle Power Row 4",discloseText:"Power Row 4 - Details",primaryIndex:1,cells:[{key:"unique-4-0",title:"Item 4-0"},{key:"unique-4-1",title:"Item 4-1"},{key:"unique-4-2",title:"Item 4-2"},{key:"unique-4-3",title:"Item 4-3"}]}];a.default=n}}]);
//# sourceMappingURL=282-c08a2acc267dfe2fd4bd.js.map